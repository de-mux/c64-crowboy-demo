; "Crow Boy"
;(c) 2002 by Eric Odland
;
; File : menu.a
;
; Contains : Main menu
;
;

;MENU_MODE_ENTER       EQU 0
MENU_MODE_LOOP        EQU 0

SelectionArrow = 45     ; char # of selection arrow


DoExitToMainMenu        subroutine
        jsr MusicThemeInit

        ldx #<Int_MainMenu
        ldy #>Int_MainMenu
        lda #IRQ_MAIN_MENU_COMPARE
        jsr QueueNextInterrupt

        jsr _DoDrawMenu

        lda #FADE_MODE_IN
        jsr SetInterruptFade
        rts

; Interrupt routine for main menu
Int_MainMenu        subroutine
        set_rts_vector IRQExit

._DoMenuLoop    jmp _DoMenuLoop

_DoDrawMenu      subroutine
        ; draw everything to offscreen first

        jsr ClearOffscreen

        ; black out all color registers
        lda #COLOR_BLACK
        ldx #[VIC_II_COLOR_REGISTERS_END - VIC_II_COLOR_REGISTERS]
.1      sta offscreen_vic_ii_color_registers,x
        dex
        bpl .1

        lda #COLOR_RED
        sta offscreen_color_bg0

        ;lda #blue              ; text = blue
        ;jsr SetCursorColor
        ;lda #<.menu
        ;ldy #>.menu
        ;jsr Print

        ldx #9          ; draw "Ping"
        ldy #17
        jsr SetCursorPosOffscreen
        lda #COLOR_WHITE
        jsr SetCursorColor
        lda #100
        ldx #6
        ldy #5
        jsr DrawPic

        ldx #23         ; "Copyright 2002"
        ldy #8
        jsr SetCursorPosOffscreen
        lda #<copyright_string
        ldy #>copyright_string
        jsr Print

        ldx #18         ; "Start Game"
        ldy #14
        jsr SetCursorPosOffscreen
        lda #<.sg
        ldy #>.sg
        jsr Print

        ldx #20         ; "Options"
        ldy #14
        jsr SetCursorPosOffscreen
        lda #<.op
        ldy #>.op
        jsr Print

        ldx #1          ; Draw Ping's face
        ldy #10
        jsr SetCursorPosOffscreen
        lda #COLOR_YELLOW
        jsr SetCursorColor
        lda #<.ping
        ldx #>.ping
        ldy #19
        jsr DrawPicMap

        ldx #15         ; "Crow Boy"
        ldy #16
        jsr SetCursorPosOffscreen
        lda #<.cbs
        ldy #>.cbs
        jsr Print

        ;jsr PageFlip
        ;ldx #_SCREEN_COPY_FULLSCREEN
        ;jsr CopyOffscreenColorToColorMem

        ;ldx #$05        ; short pause
        ;jsr Wait

        lda #2          ; Setup Menu with 2 items,
        ldx #18         ;  starting at row 16, column 15
        ldy #12
        jsr _SetupMenu

        ;inc menu_mode    ; set mode to MENU_MODE_LOOP
        rts             ; goto IRQExit
.menu   DC "OH, WHAT A MEAL!",0
.cbs    DC "CROW BOY",0
.sg     DC "START GAME",0
.op     DC "OPTIONS",0
.ping   incbin "PingTitle.chrmap"
        DC 0


; Function Name:        _SetupMenu
;
; Purpose:              Select from a menu using joystick
;
; Registers used:       .A, .X, .Y
;
; How to use:
;       Load .X/.Y with row/column to left of first menu item
;       Load .A with # of menu items
;       Call _SetupMenu.
;       Call _MenuSelect on every IRQ.
;       Item selected will be returned in .X
;               if item hasn't been selected yet, .X = 0
;
_SetupMenu       subroutine
        STA .ITEMS
        LDA #1          ;current menu item
        STA .SEL
        STY .column     ; store row/column
        STX .row
        JSR SetCursorPosOffscreen      ; set cursor to desired position
        RTS

_MenuSelect:
.ARROW:  ;ldx #5
        ;JSR Wait        ;little delay for selection
.R1     JSR ReadJoy     ;read joystick
        BCC .END2
        CPY #0
        BEQ .MOVE
        BMI .UP
.DOWN   LDA .ITEMS
        CMP .SEL
        BEQ .MOVE
        JSR .ERASE
        INC .row
        INC .row
        INC .SEL
        JMP .MOVE
.UP     LDA .SEL
        CMP #1
        BEQ .MOVE
        JSR .ERASE
        DEC .row
        DEC .row
        DEC .SEL
.MOVE   CLC
        ldx .row
        ldy .column
        JSR SetCursorPos
        LDA #SelectionArrow  ; show selection arrow
        JSR PrintChar
        ;JMP .ARROW
        ldx #0          ; user hasn't selected an item yet
        rts
.END2   LDX .SEL
        RTS
;.ERASE LDX #4
;.R2    LDA .ER-1,X
;       JSR PrintChar
;       DEX
;       BNE .R2
.ERASE  jsr BackSpace
        lda #SPACE_BAR
        jsr PrintChar
.R3     SEC             ;get row/column
        JSR SetCursorPos
        RTS

.ITEMS  DC 0
.SEL    DC 0
.row    DC 0
.column DC 0


; Function Name:        _DoMenuLoop
;
; Purpose:              Do the main menu loop
;
; Registers used:       .A, .X, .Y
;
_DoMenuLoop      subroutine
        jsr MusicThemeIRQ

        jsr _MenuSelect
        dex
        bmi .1          ; X was 0(no selection)
        bne .2
        ; selection 1: new game
        ; setup stuff to do fadeout
        jsr QueueFadeOutToNewGame
        rts
.2      nop             ; X was 2
.1      rts             ; goto IRQExit


