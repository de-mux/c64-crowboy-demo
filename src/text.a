; "Crow Boy"
;(c) 2002 by Eric Odland
;
; File : text.a
;
; Contains : Screen text subroutines
;
;
; ZeroPage locations used:
;       cursor_pos, cursor_color

;Chars
SPACE_BAR        EQU $20
copyright_char  EQU 47
tm_char         EQU 42


; ******************* TextInit *******************
;
; Purpose:              Copies alphanumeric characters(0-63) from Charset1 to Charset2
;
; Registers used:       .A, .X
;
; Memory used:          Charset1,Charset2
;
; How to use:
;       Call this routine.
TextInit        subroutine
        ldx #0
        txa
.1      lda Charset1,x
        sta Charset2,x
        lda Charset1+$100,x
        sta Charset2+$100,x
        dex
        bne .1
        rts



; ******************* PrintChar *******************
;
; Purpose:              output an ASCII character to screen
;
; Registers used:       .A, .X
;
; Memory used:          cursor_pos,cursor_color,color_pos
;
; How to use:
;       Load .A with desired character. Call this routine.
;
PrintChar        subroutine
        ldx #0
        cmp #64
        bmi .1
        sec
        sbc #64
.1      sta (cursor_pos,x)
        ;lda cursor_pos  ;determine corresponding color memory
        ;sta temp_w2
        ;lda cursor_pos+1
        ;clc
        ;adc #$D4
        ;sta temp_w2+1
        lda cursor_color ; color character
        sta (color_pos,x)

        inc cursor_pos   ; next position
        inc color_pos
        bne .2
        inc cursor_pos+1
        inc color_pos+1
.2      rts


; ******************* BackSpace *******************
;
; Purpose:              put cursor/color mem pointers back 1 byte
;
; Registers used:       .A
;
; Memory used:          cursor_pos,color_pos
;
; How to use:
;       Call this routine. Acts like a "backspace"
;
BackSpace       subroutine
        lda cursor_pos
        bne .1
        dec cursor_pos+1
        dec color_pos+1
.1      dec cursor_pos
        dec color_pos
        rts


; ******************* Print *******************
;
; Purpose:              print a C-string(terminated by zero) to the screen
;
; Registers used:       .A, .Y
;
; Memory used:          temp_w(Ptr), temp_w2(by PrintChar)
;
; Subroutines called:   PrintChar
;
; How to use:
;       Load .A/.Y with pointer to C-string (<256 bytes). Call this routine.
;       Note: leaves ptr to address AFTER C-string in temp_w
;
Print   subroutine
        sta temp_w        ;prints a row of ASCII chars until it gets
        sty temp_w+1      ;       byte 0
        ldy #0
.get    lda (temp_w),y
        beq .nxt
        jsr PrintChar
        iny
        bne .get
.nxt    iny
        tya
        clc
        adc temp_w
        bcc .end
        inc temp_w+1
.end    sta temp_w
        rts

; ******************* PrintHex *******************
;
; Purpose:              print a hex number to screen
;
; Subroutines called:   PrintChar
;
; How to use:
;       Load .A/.X with a pointer to the number
;       Load .Y with the total number of bytes to print
PrintHex        subroutine
.num_w = temp_w
.num_lsb = .num_w
.num_msb = .num_w+1
.total_bytes = temp_w2
        sta .num_lsb
        stx .num_msb
        sty .total_bytes
        ldy #0
.1      lda (.num_w),y
        pha
        lsr
        lsr
        lsr
        lsr
        tax
        lda .hex2ascii,x
        jsr PrintChar
        pla
        and #$0F
        tax
        lda .hex2ascii,x
        jsr PrintChar
        lda #SPACE_BAR
        jsr PrintChar
        iny
        cpy .total_bytes
        bne .1
        rts
.hex2ascii      dc.b "0123456789ABCDEF"

